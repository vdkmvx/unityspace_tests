{"uid":"8d9fd6b44ca81f9d","name":"POST /tasks","fullName":"tests.5 test_tasks.test_tasks#test_3_create_task","historyId":"4f6cd9c23df846fe0558408a45669544","time":{"start":1694356274877,"stop":1694356274886,"duration":9},"status":"failed","statusMessage":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","statusTrace":"login_tasks = <requests.sessions.Session object at 0x000001F8F3BCD110>\nstage_id = 111\n\n    @allure.title(\"POST /tasks\")\n    @pytest.mark.parametrize(\"stage_id\", valid_ids)\n    def test_3_create_task(login_tasks, stage_id):\n        response = login_tasks.post(\n            HOST + \"/tasks\",\n            json={\n                \"name\": \"string\",\n                \"stageId\": stage_id,\n                \"order\": 0,\n                \"responsibleUserId\": None,\n                \"description\": \"string\",\n                \"color\": \"string\",\n                \"dateBegin\": time_now(),\n                \"dateEnd\": time_now(),\n            },\n        )\n>       assert response.status_code == 400\nE       assert 500 == 400\nE        +  where 500 = <Response [500]>.status_code\n\ntests\\5 test_tasks\\test_tasks.py:56: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":20,"retriesStatusChange":false,"beforeStages":[{"name":"database","time":{"start":1694356208592,"stop":1694356208615,"duration":23},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"login_tasks","time":{"start":1694356273963,"stop":1694356274637,"duration":674},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"afterStages":[{"name":"login_tasks::0","time":{"start":1694356275870,"stop":1694356275894,"duration":24},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"database::0","time":{"start":1694356275926,"stop":1694356275927,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"labels":[{"name":"parentSuite","value":"tests.5 test_tasks"},{"name":"suite","value":"test_tasks"},{"name":"host","value":"WIN-V4MLJNPG1BI"},{"name":"thread","value":"17680-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.5 test_tasks.test_tasks"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"stage_id","value":"111"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"3e37e66a760a8560","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694356119261,"stop":1694356119268,"duration":7}},{"uid":"794fcb3435052d80","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694356078978,"stop":1694356078984,"duration":6}},{"uid":"b5f4d66869b5f59e","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694355943117,"stop":1694355943125,"duration":8}},{"uid":"3b733fbc4827bf7f","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694355854238,"stop":1694355854246,"duration":8}},{"uid":"1492cc13d1f31683","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694355780550,"stop":1694355780557,"duration":7}},{"uid":"1dfef89242e7e3d0","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694355590579,"stop":1694355590590,"duration":11}},{"uid":"4191313e118836fc","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694355560488,"stop":1694355560496,"duration":8}},{"uid":"3536010e24e5455b","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694355508601,"stop":1694355508608,"duration":7}},{"uid":"b29a66633b2bef9","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694355486992,"stop":1694355487000,"duration":8}},{"uid":"f435be1655388471","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694355438375,"stop":1694355438386,"duration":11}},{"uid":"516de94972d5d328","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694355401470,"stop":1694355401478,"duration":8}},{"uid":"1ac2fb2aae3e81d4","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694355393740,"stop":1694355393746,"duration":6}},{"uid":"e747b39920d3a088","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694355309021,"stop":1694355309028,"duration":7}},{"uid":"fc5ca756b106d4c3","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694355295245,"stop":1694355295252,"duration":7}},{"uid":"9d6f7dca4439018","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694348202571,"stop":1694348202578,"duration":7}},{"uid":"1775411102ac621d","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694348168736,"stop":1694348168743,"duration":7}},{"uid":"9d5509e4f82d853e","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694348108544,"stop":1694348108553,"duration":9}},{"uid":"eb08c771c74e6919","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694348077953,"stop":1694348077960,"duration":7}},{"uid":"86c4de2f4995bb6d","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694348052672,"stop":1694348052679,"duration":7}},{"uid":"ea63a7dd4996dea8","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694348035838,"stop":1694348035847,"duration":9}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"8d9fd6b44ca81f9d.json","parameterValues":["111"]}
