{"uid":"99120954f230b5b5","name":"POST /tasks","fullName":"tests.5 test_tasks.test_tasks#test_4_create_task","historyId":"06c0abb69fe9de8afbf13e16bdd9c3ae","time":{"start":1694348168844,"stop":1694348168909,"duration":65},"status":"failed","statusMessage":"AssertionError: assert {'history': {'id': 3355, 'projectName': None, 'state': None, 'taskId': 7007, ...}, 'task': {'blockReason': None, 'color': 'string', 'cover': None, 'createdAt': '2023-09-10T12:16:08.889Z', ...}} == 200\n +  where {'history': {'id': 3355, 'projectName': None, 'state': None, 'taskId': 7007, ...}, 'task': {'blockReason': None, 'color': 'string', 'cover': None, 'createdAt': '2023-09-10T12:16:08.889Z', ...}} = <bound method Response.json of <Response [201]>>()\n +    where <bound method Response.json of <Response [201]>> = <Response [201]>.json","statusTrace":"login_tasks = <requests.sessions.Session object at 0x0000028DD75E5FD0>, name = 'name'\n\n    @allure.title(\"POST /tasks\")\n    @pytest.mark.parametrize('name', valid_names)\n    def test_4_create_task(login_tasks, name):\n        project = login_tasks.get(HOST + '/projects/all-projects').json()[0]\n        project_stage_id = project[\"stages\"][0][\"id\"]\n        print(\"stageid: \", project_stage_id)\n        response = login_tasks.post(HOST + '/tasks', json={\n            \"name\": name,\n            \"stageId\": project_stage_id,\n            \"order\": 0,\n            \"responsibleUserId\": None,\n            \"description\": \"string\",\n            \"color\": \"string\",\n            \"dateBegin\": \"2023-09-09T19:59:58.066Z\",\n            \"dateEnd\": \"2023-09-09T19:59:58.066Z\"\n        })\n>       assert response.json() == 200\nE       AssertionError: assert {'history': {'id': 3355, 'projectName': None, 'state': None, 'taskId': 7007, ...}, 'task': {'blockReason': None, 'color': 'string', 'cover': None, 'createdAt': '2023-09-10T12:16:08.889Z', ...}} == 200\nE        +  where {'history': {'id': 3355, 'projectName': None, 'state': None, 'taskId': 7007, ...}, 'task': {'blockReason': None, 'color': 'string', 'cover': None, 'createdAt': '2023-09-10T12:16:08.889Z', ...}} = <bound method Response.json of <Response [201]>>()\nE        +    where <bound method Response.json of <Response [201]>> = <Response [201]>.json\n\ntests\\5 test_tasks\\test_tasks.py:61: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"database","time":{"start":1694348167850,"stop":1694348167857,"duration":7},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"login_tasks","time":{"start":1694348167857,"stop":1694348168504,"duration":647},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"afterStages":[{"name":"login_tasks::0","time":{"start":1694348168912,"stop":1694348168923,"duration":11},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"database::0","time":{"start":1694348168925,"stop":1694348168925,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"labels":[{"name":"parentSuite","value":"tests.5 test_tasks"},{"name":"suite","value":"test_tasks"},{"name":"host","value":"WIN-V4MLJNPG1BI"},{"name":"thread","value":"11796-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.5 test_tasks.test_tasks"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"name","value":"'name'"}],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"99120954f230b5b5.json","parameterValues":["'name'"]}
