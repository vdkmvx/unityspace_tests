{"uid":"443e084fd7bcc048","name":"POST /projects/project_id/stages","fullName":"tests.4 test_projects.test_projects#test_38_create_stage_into_project_with_invalid_order","historyId":"c8065c509012729a5b94e1c9df233086","time":{"start":1694356254205,"stop":1694356254246,"duration":41},"status":"failed","statusMessage":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","statusTrace":"login_projects = <requests.sessions.Session object at 0x000001F8F37D7F10>\norder = 122222222222222222...2222222222222222222\n\n    @allure.title(\"POST /projects/project_id/stages\")\n    @pytest.mark.parametrize(\"order\", invalid_orders)\n    def test_38_create_stage_into_project_with_invalid_order(login_projects, order):\n        project = login_projects.get(HOST + \"/projects/all-projects\").json()[0]\n        project_id = project[\"id\"]\n        response = login_projects.post(\n            HOST + f\"/projects/{project_id}/stages\",\n            json={\"name\": \"Колонка\", \"order\": order, \"tasks\": []},\n        )\n>       assert response.status_code == 400\nE       assert 500 == 400\nE        +  where 500 = <Response [500]>.status_code\n\ntests\\4 test_projects\\test_projects.py:513: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[{"name":"database","time":{"start":1694356208592,"stop":1694356208615,"duration":23},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"login_projects","time":{"start":1694356246073,"stop":1694356246677,"duration":604},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"afterStages":[{"name":"login_projects::0","time":{"start":1694356275895,"stop":1694356275898,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"database::0","time":{"start":1694356275926,"stop":1694356275927,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"labels":[{"name":"parentSuite","value":"tests.4 test_projects"},{"name":"suite","value":"test_projects"},{"name":"host","value":"WIN-V4MLJNPG1BI"},{"name":"thread","value":"17680-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.4 test_projects.test_projects"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"order","value":"12222222222222222222222222222222222222222222222222222222222222222222222222222222222"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"6037ae6e3f7bb531","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694346488271,"stop":1694346488314,"duration":43}},{"uid":"6b2c175febfc668f","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694346183605,"stop":1694346183647,"duration":42}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"443e084fd7bcc048.json","parameterValues":["12222222222222222222222222222222222222222222222222222222222222222222222222222222222"]}
