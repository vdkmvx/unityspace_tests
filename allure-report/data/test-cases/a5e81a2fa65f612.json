{"uid":"a5e81a2fa65f612","name":"POST /spaces/space_id/columns","fullName":"tests.3 test_spaces.test_spaces#test_50_create_column_into_invalid_space","historyId":"8cd92f3a21da6e9583b5b566cfa6822b","time":{"start":1694356231928,"stop":1694356231935,"duration":7},"status":"failed","statusMessage":"AssertionError: assert 403 == 400\n +  where 403 = <Response [403]>.status_code","statusTrace":"login_spaces = <requests.sessions.Session object at 0x000001F8F3108350>\nspace_id = 111\n\n    @allure.title(\"POST /spaces/space_id/columns\")\n    @pytest.mark.parametrize(\"space_id\", valid_ids)\n    def test_50_create_column_into_invalid_space(login_spaces, space_id):\n        response = login_spaces.post(\n            HOST + f\"/spaces/{space_id}/columns\", json={\"name\": \"Колонка\", \"order\": 2}\n        )\n>       assert response.status_code == 400\nE       assert 403 == 400\nE        +  where 403 = <Response [403]>.status_code\n\ntests\\3 test_spaces\\test_spaces.py:473: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[{"name":"database","time":{"start":1694356208592,"stop":1694356208615,"duration":23},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"login_spaces","time":{"start":1694356214870,"stop":1694356215472,"duration":602},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"afterStages":[{"name":"login_spaces::0","time":{"start":1694356275907,"stop":1694356275910,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"database::0","time":{"start":1694356275926,"stop":1694356275927,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"labels":[{"name":"parentSuite","value":"tests.3 test_spaces"},{"name":"suite","value":"test_spaces"},{"name":"host","value":"WIN-V4MLJNPG1BI"},{"name":"thread","value":"17680-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.3 test_spaces.test_spaces"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"space_id","value":"111"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"4f92ead652fc72d0","status":"failed","statusDetails":"AssertionError: assert 403 == 400\n +  where 403 = <Response [403]>.status_code","time":{"start":1694346465892,"stop":1694346465900,"duration":8}},{"uid":"1bc56454e1984a51","status":"failed","statusDetails":"AssertionError: assert 403 == 400\n +  where 403 = <Response [403]>.status_code","time":{"start":1694346162298,"stop":1694346162306,"duration":8}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"a5e81a2fa65f612.json","parameterValues":["111"]}
