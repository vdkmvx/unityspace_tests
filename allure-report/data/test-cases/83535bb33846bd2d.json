{"uid":"83535bb33846bd2d","name":"PATCH /projects/project_id/move","fullName":"tests.4 test_projects.test_projects#test_33_move_project_with_invalid_orders","historyId":"26584e9bf8c97b92984e38e8faf1e9c0","time":{"start":1694356253462,"stop":1694356253524,"duration":62},"status":"failed","statusMessage":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","statusTrace":"login_projects = <requests.sessions.Session object at 0x000001F8F37D7F10>\nspace_column_order = 122222222222222222...2222222222222222222\n\n    @allure.title(\"PATCH /projects/project_id/move\")\n    @pytest.mark.parametrize(\"space_column_order\", invalid_orders)\n    def test_33_move_project_with_invalid_orders(login_projects, space_column_order):\n        space = login_projects.get(HOST + \"/spaces\").json()[0]\n        space_column_id = space[\"columns\"][0][\"id\"]\n        project = login_projects.get(HOST + \"/projects/all-projects\").json()[0]\n        project_id = project[\"id\"]\n        response = login_projects.patch(\n            HOST + f\"/projects/{project_id}/move\",\n            json={\"columnId\": space_column_id, \"order\": space_column_order},\n        )\n>       assert response.status_code == 400\nE       assert 500 == 400\nE        +  where 500 = <Response [500]>.status_code\n\ntests\\4 test_projects\\test_projects.py:453: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[{"name":"database","time":{"start":1694356208592,"stop":1694356208615,"duration":23},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"login_projects","time":{"start":1694356246073,"stop":1694356246677,"duration":604},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"afterStages":[{"name":"login_projects::0","time":{"start":1694356275895,"stop":1694356275898,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"database::0","time":{"start":1694356275926,"stop":1694356275927,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"labels":[{"name":"parentSuite","value":"tests.4 test_projects"},{"name":"suite","value":"test_projects"},{"name":"host","value":"WIN-V4MLJNPG1BI"},{"name":"thread","value":"17680-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.4 test_projects.test_projects"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"space_column_order","value":"12222222222222222222222222222222222222222222222222222222222222222222222222222222222"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"26d67401b48675f","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694346487449,"stop":1694346487519,"duration":70}},{"uid":"2554b0f8b393094e","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694346182864,"stop":1694346182931,"duration":67}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"83535bb33846bd2d.json","parameterValues":["12222222222222222222222222222222222222222222222222222222222222222222222222222222222"]}
