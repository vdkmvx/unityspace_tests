{"uid":"1553eeb3f521c7e7","name":"PATCH /spaces/space_id/columns/column_id","fullName":"tests.3 test_spaces.test_spaces#test_40_change_column_invalid_order_space","historyId":"04b1c213bf64ee5611eaadf19bb9104c","time":{"start":1694356223936,"stop":1694356223963,"duration":27},"status":"failed","statusMessage":"AssertionError: assert 403 == 400\n +  where 403 = <Response [403]>.status_code","statusTrace":"login_spaces = <requests.sessions.Session object at 0x000001F8F3108350>\norder = 12222222, space_id = 111\n\n    @allure.title(\"PATCH /spaces/space_id/columns/column_id\")\n    @pytest.mark.parametrize(\"order\", valid_orders)\n    @pytest.mark.parametrize(\"space_id\", valid_ids)\n    def test_40_change_column_invalid_order_space(login_spaces, order, space_id):\n        space = login_spaces.get(HOST + \"/spaces\").json()[0]\n        space_column_id = space[\"columns\"][0][\"id\"]\n        response = login_spaces.patch(\n            HOST + f\"/spaces/{space_id}/columns/{space_column_id}\", json={\"order\": order}\n        )\n>       assert response.status_code == 400\nE       assert 403 == 400\nE        +  where 403 = <Response [403]>.status_code\n\ntests\\3 test_spaces\\test_spaces.py:364: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[{"name":"database","time":{"start":1694356208592,"stop":1694356208615,"duration":23},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"login_spaces","time":{"start":1694356214870,"stop":1694356215472,"duration":602},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"afterStages":[{"name":"login_spaces::0","time":{"start":1694356275907,"stop":1694356275910,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"database::0","time":{"start":1694356275926,"stop":1694356275927,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"labels":[{"name":"parentSuite","value":"tests.3 test_spaces"},{"name":"suite","value":"test_spaces"},{"name":"host","value":"WIN-V4MLJNPG1BI"},{"name":"thread","value":"17680-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.3 test_spaces.test_spaces"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"order","value":"12222222"},{"name":"space_id","value":"111"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"41cd8bb885e62bf5","status":"failed","statusDetails":"AssertionError: assert 403 == 400\n +  where 403 = <Response [403]>.status_code","time":{"start":1694346457779,"stop":1694346457809,"duration":30}},{"uid":"445d05c199d0b71f","status":"failed","statusDetails":"AssertionError: assert 403 == 400\n +  where 403 = <Response [403]>.status_code","time":{"start":1694346154508,"stop":1694346154536,"duration":28}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"1553eeb3f521c7e7.json","parameterValues":["12222222","111"]}
