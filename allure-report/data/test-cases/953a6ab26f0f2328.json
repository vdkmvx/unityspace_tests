{"uid":"953a6ab26f0f2328","name":"POST /tasks","fullName":"tests.5 test_tasks.test_tasks#test_3_create_task","historyId":"83e631d9ef9108c8eb1c388fbfa78daa","time":{"start":1694356274894,"stop":1694356274902,"duration":8},"status":"failed","statusMessage":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","statusTrace":"login_tasks = <requests.sessions.Session object at 0x000001F8F3BCD110>\nstage_id = 666\n\n    @allure.title(\"POST /tasks\")\n    @pytest.mark.parametrize(\"stage_id\", valid_ids)\n    def test_3_create_task(login_tasks, stage_id):\n        response = login_tasks.post(\n            HOST + \"/tasks\",\n            json={\n                \"name\": \"string\",\n                \"stageId\": stage_id,\n                \"order\": 0,\n                \"responsibleUserId\": None,\n                \"description\": \"string\",\n                \"color\": \"string\",\n                \"dateBegin\": time_now(),\n                \"dateEnd\": time_now(),\n            },\n        )\n>       assert response.status_code == 400\nE       assert 500 == 400\nE        +  where 500 = <Response [500]>.status_code\n\ntests\\5 test_tasks\\test_tasks.py:56: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":20,"retriesStatusChange":false,"beforeStages":[{"name":"database","time":{"start":1694356208592,"stop":1694356208615,"duration":23},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"login_tasks","time":{"start":1694356273963,"stop":1694356274637,"duration":674},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"afterStages":[{"name":"login_tasks::0","time":{"start":1694356275870,"stop":1694356275894,"duration":24},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"database::0","time":{"start":1694356275926,"stop":1694356275927,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"labels":[{"name":"parentSuite","value":"tests.5 test_tasks"},{"name":"suite","value":"test_tasks"},{"name":"host","value":"WIN-V4MLJNPG1BI"},{"name":"thread","value":"17680-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.5 test_tasks.test_tasks"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"stage_id","value":"666"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"9ecf20b3b4ce6bc1","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694356119273,"stop":1694356119280,"duration":7}},{"uid":"9d68c084cc7c206e","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694356078989,"stop":1694356078996,"duration":7}},{"uid":"ab8d818d9499bc54","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694355943129,"stop":1694355943136,"duration":7}},{"uid":"ad3a8842d91073aa","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694355854252,"stop":1694355854261,"duration":9}},{"uid":"d3f78a938f7b5435","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694355780562,"stop":1694355780569,"duration":7}},{"uid":"c3c4cde5344dfbfa","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694355590595,"stop":1694355590603,"duration":8}},{"uid":"8a9177696c383272","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694355560500,"stop":1694355560506,"duration":6}},{"uid":"bbf29d5452c67a25","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694355508613,"stop":1694355508620,"duration":7}},{"uid":"da77c6099b10b164","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694355487004,"stop":1694355487012,"duration":8}},{"uid":"2f23c97f210b8e0c","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694355438390,"stop":1694355438400,"duration":10}},{"uid":"bef8d1d49ef61a7b","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694355401481,"stop":1694355401489,"duration":8}},{"uid":"4d99acff758cc02a","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694355393751,"stop":1694355393759,"duration":8}},{"uid":"25a1897d14282e9d","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694355309033,"stop":1694355309040,"duration":7}},{"uid":"6312b91c7f530c42","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694355295257,"stop":1694355295264,"duration":7}},{"uid":"950b4d5d2fdce7f1","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694348202582,"stop":1694348202589,"duration":7}},{"uid":"47c021297fe14a7a","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694348168747,"stop":1694348168754,"duration":7}},{"uid":"f235d34e2bb5d065","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694348108557,"stop":1694348108565,"duration":8}},{"uid":"4623511131136740","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694348077964,"stop":1694348077975,"duration":11}},{"uid":"c0b3f8e9d4b5ab42","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694348052683,"stop":1694348052691,"duration":8}},{"uid":"15cef4d1e51a054d","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694348035851,"stop":1694348035859,"duration":8}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"953a6ab26f0f2328.json","parameterValues":["666"]}
