{"uid":"43593d7aae290976","name":"POST /tasks","fullName":"tests.5 test_tasks.test_tasks#test_3_create_task","historyId":"e301dea9e64c4e2c9dad9724a82f8015","time":{"start":1694356274719,"stop":1694356274728,"duration":9},"status":"failed","statusMessage":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","statusTrace":"login_tasks = <requests.sessions.Session object at 0x000001F8F3BCD110>\nstage_id = 2\n\n    @allure.title(\"POST /tasks\")\n    @pytest.mark.parametrize(\"stage_id\", valid_ids)\n    def test_3_create_task(login_tasks, stage_id):\n        response = login_tasks.post(\n            HOST + \"/tasks\",\n            json={\n                \"name\": \"string\",\n                \"stageId\": stage_id,\n                \"order\": 0,\n                \"responsibleUserId\": None,\n                \"description\": \"string\",\n                \"color\": \"string\",\n                \"dateBegin\": time_now(),\n                \"dateEnd\": time_now(),\n            },\n        )\n>       assert response.status_code == 400\nE       assert 500 == 400\nE        +  where 500 = <Response [500]>.status_code\n\ntests\\5 test_tasks\\test_tasks.py:56: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":20,"retriesStatusChange":false,"beforeStages":[{"name":"database","time":{"start":1694356208592,"stop":1694356208615,"duration":23},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"login_tasks","time":{"start":1694356273963,"stop":1694356274637,"duration":674},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"afterStages":[{"name":"login_tasks::0","time":{"start":1694356275870,"stop":1694356275894,"duration":24},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"database::0","time":{"start":1694356275926,"stop":1694356275927,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"labels":[{"name":"parentSuite","value":"tests.5 test_tasks"},{"name":"suite","value":"test_tasks"},{"name":"host","value":"WIN-V4MLJNPG1BI"},{"name":"thread","value":"17680-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.5 test_tasks.test_tasks"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"stage_id","value":"2"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"c57e91cb7065add8","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694356119142,"stop":1694356119148,"duration":6}},{"uid":"489a6c04436bab35","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694356078848,"stop":1694356078856,"duration":8}},{"uid":"bd8bb3bce0e0d633","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694355942987,"stop":1694355942995,"duration":8}},{"uid":"984be34cfb999483","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694355854090,"stop":1694355854100,"duration":10}},{"uid":"3474be879e0e19c7","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694355780411,"stop":1694355780420,"duration":9}},{"uid":"9fa06ee4dc180554","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694355590444,"stop":1694355590453,"duration":9}},{"uid":"bb3f1cd73b90f2","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694355560367,"stop":1694355560375,"duration":8}},{"uid":"9002831ccd57ceef","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694355508492,"stop":1694355508499,"duration":7}},{"uid":"6a3c60736b158c8b","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694355486872,"stop":1694355486881,"duration":9}},{"uid":"b7675c6c1e439629","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694355438267,"stop":1694355438275,"duration":8}},{"uid":"c4244742691fa255","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694355401365,"stop":1694355401372,"duration":7}},{"uid":"e4d47f7c4ca7bd08","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694355393628,"stop":1694355393637,"duration":9}},{"uid":"9fc9f0db872536d9","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694355308918,"stop":1694355308925,"duration":7}},{"uid":"b0ee258f1a68b67b","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694355295131,"stop":1694355295139,"duration":8}},{"uid":"e53e9453158abf3d","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694348202466,"stop":1694348202474,"duration":8}},{"uid":"4fecbff7eae2abbf","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694348168628,"stop":1694348168635,"duration":7}},{"uid":"5e68d2f36bc98e02","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694348108416,"stop":1694348108425,"duration":9}},{"uid":"2ff6042e0b844b8","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694348077846,"stop":1694348077853,"duration":7}},{"uid":"d4e884b83d112b4d","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694348052551,"stop":1694348052560,"duration":9}},{"uid":"ef5883efa8e6f18e","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694348035723,"stop":1694348035730,"duration":7}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"43593d7aae290976.json","parameterValues":["2"]}
