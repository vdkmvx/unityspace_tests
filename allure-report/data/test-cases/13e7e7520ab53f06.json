{"uid":"13e7e7520ab53f06","name":"POST /tasks","fullName":"tests.5 test_tasks.test_tasks#test_4_create_task","historyId":"a8a96cb31656508bec6132c407ad851b","time":{"start":1694348077979,"stop":1694348078058,"duration":79},"status":"failed","statusMessage":"AssertionError: assert {'message': 'Internal server error', 'statusCode': 500} == 200\n +  where {'message': 'Internal server error', 'statusCode': 500} = <bound method Response.json of <Response [500]>>()\n +    where <bound method Response.json of <Response [500]>> = <Response [500]>.json","statusTrace":"login_tasks = <requests.sessions.Session object at 0x00000160B8EE1D90>, name = '1'\n\n    @allure.title(\"POST /tasks\")\n    @pytest.mark.parametrize('name', valid_names)\n    def test_4_create_task(login_tasks, name):\n        project = login_tasks.get(HOST + '/projects/all-projects').json()[0]\n        project_stage_id = project[\"stages\"][0][\"id\"]\n        response = login_tasks.post(HOST + '/tasks', json={\n            \"name\": name,\n            \"stageId\": project_stage_id,\n            \"order\": 0,\n            \"responsibleUserId\": None,\n            \"description\": \"string\",\n            \"color\": \"string\",\n            \"dateBegin\": \"string\",\n            \"dateEnd\": \"string\"\n        })\n>       assert response.json() == 200\nE       AssertionError: assert {'message': 'Internal server error', 'statusCode': 500} == 200\nE        +  where {'message': 'Internal server error', 'statusCode': 500} = <bound method Response.json of <Response [500]>>()\nE        +    where <bound method Response.json of <Response [500]>> = <Response [500]>.json\n\ntests\\5 test_tasks\\test_tasks.py:60: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"database","time":{"start":1694348077022,"stop":1694348077028,"duration":6},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"login_tasks","time":{"start":1694348077028,"stop":1694348077726,"duration":698},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"afterStages":[{"name":"login_tasks::0","time":{"start":1694348078135,"stop":1694348078148,"duration":13},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"database::0","time":{"start":1694348078149,"stop":1694348078149,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"labels":[{"name":"parentSuite","value":"tests.5 test_tasks"},{"name":"suite","value":"test_tasks"},{"name":"host","value":"WIN-V4MLJNPG1BI"},{"name":"thread","value":"10228-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.5 test_tasks.test_tasks"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"name","value":"'1'"}],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"13e7e7520ab53f06.json","parameterValues":["'1'"]}
