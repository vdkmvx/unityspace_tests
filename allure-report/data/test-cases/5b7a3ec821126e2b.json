{"uid":"5b7a3ec821126e2b","name":"POST /tasks","fullName":"tests.5 test_tasks.test_tasks#test_3_create_task","historyId":"2fec98f5ef62a7a99f96939fa7f7d6fd","time":{"start":1694356274817,"stop":1694356274826,"duration":9},"status":"failed","statusMessage":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","statusTrace":"login_tasks = <requests.sessions.Session object at 0x000001F8F3BCD110>\nstage_id = 8\n\n    @allure.title(\"POST /tasks\")\n    @pytest.mark.parametrize(\"stage_id\", valid_ids)\n    def test_3_create_task(login_tasks, stage_id):\n        response = login_tasks.post(\n            HOST + \"/tasks\",\n            json={\n                \"name\": \"string\",\n                \"stageId\": stage_id,\n                \"order\": 0,\n                \"responsibleUserId\": None,\n                \"description\": \"string\",\n                \"color\": \"string\",\n                \"dateBegin\": time_now(),\n                \"dateEnd\": time_now(),\n            },\n        )\n>       assert response.status_code == 400\nE       assert 500 == 400\nE        +  where 500 = <Response [500]>.status_code\n\ntests\\5 test_tasks\\test_tasks.py:56: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":20,"retriesStatusChange":false,"beforeStages":[{"name":"database","time":{"start":1694356208592,"stop":1694356208615,"duration":23},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"login_tasks","time":{"start":1694356273963,"stop":1694356274637,"duration":674},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"afterStages":[{"name":"login_tasks::0","time":{"start":1694356275870,"stop":1694356275894,"duration":24},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"database::0","time":{"start":1694356275926,"stop":1694356275927,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"labels":[{"name":"parentSuite","value":"tests.5 test_tasks"},{"name":"suite","value":"test_tasks"},{"name":"host","value":"WIN-V4MLJNPG1BI"},{"name":"thread","value":"17680-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.5 test_tasks.test_tasks"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"stage_id","value":"8"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"2583dceb5c9db101","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694356119224,"stop":1694356119232,"duration":8}},{"uid":"29d33078b6d67673","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694356078931,"stop":1694356078938,"duration":7}},{"uid":"ea91fb1ff4d39f0d","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694355943069,"stop":1694355943077,"duration":8}},{"uid":"19000c4b62d69875","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694355854181,"stop":1694355854191,"duration":10}},{"uid":"a0d74d5cfc09b6c9","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694355780494,"stop":1694355780501,"duration":7}},{"uid":"2c1323f89183ed7","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694355590522,"stop":1694355590531,"duration":9}},{"uid":"44ab034c6b457936","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694355560443,"stop":1694355560451,"duration":8}},{"uid":"fc3a531a7debe789","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694355508562,"stop":1694355508571,"duration":9}},{"uid":"83578d8581416bd3","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694355486953,"stop":1694355486963,"duration":10}},{"uid":"55af017ce2f04174","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694355438336,"stop":1694355438343,"duration":7}},{"uid":"ebb5c6549dd772be","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694355401435,"stop":1694355401443,"duration":8}},{"uid":"8a67e14a1d259c1b","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694355393705,"stop":1694355393713,"duration":8}},{"uid":"63c831d7013f6737","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694355308989,"stop":1694355308995,"duration":6}},{"uid":"e61781f988e5fe8a","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694355295200,"stop":1694355295211,"duration":11}},{"uid":"4825ebc3099787f3","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694348202538,"stop":1694348202544,"duration":6}},{"uid":"529fb4b9b61d9d49","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694348168700,"stop":1694348168708,"duration":8}},{"uid":"c38eb9dabeb150e6","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694348108503,"stop":1694348108512,"duration":9}},{"uid":"e203feb415941cfb","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694348077918,"stop":1694348077925,"duration":7}},{"uid":"582634d233c7a8e8","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694348052632,"stop":1694348052641,"duration":9}},{"uid":"72443308719511da","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694348035798,"stop":1694348035807,"duration":9}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"5b7a3ec821126e2b.json","parameterValues":["8"]}
