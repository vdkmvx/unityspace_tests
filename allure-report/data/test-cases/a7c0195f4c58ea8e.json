{"uid":"a7c0195f4c58ea8e","name":"POST /tasks","fullName":"tests.5 test_tasks.test_tasks#test_3_create_task","historyId":"ed56a3501315b9bb2590128483778b86","time":{"start":1694356274851,"stop":1694356274870,"duration":19},"status":"failed","statusMessage":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","statusTrace":"login_tasks = <requests.sessions.Session object at 0x000001F8F3BCD110>\nstage_id = 10\n\n    @allure.title(\"POST /tasks\")\n    @pytest.mark.parametrize(\"stage_id\", valid_ids)\n    def test_3_create_task(login_tasks, stage_id):\n        response = login_tasks.post(\n            HOST + \"/tasks\",\n            json={\n                \"name\": \"string\",\n                \"stageId\": stage_id,\n                \"order\": 0,\n                \"responsibleUserId\": None,\n                \"description\": \"string\",\n                \"color\": \"string\",\n                \"dateBegin\": time_now(),\n                \"dateEnd\": time_now(),\n            },\n        )\n>       assert response.status_code == 400\nE       assert 500 == 400\nE        +  where 500 = <Response [500]>.status_code\n\ntests\\5 test_tasks\\test_tasks.py:56: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":20,"retriesStatusChange":false,"beforeStages":[{"name":"database","time":{"start":1694356208592,"stop":1694356208615,"duration":23},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"login_tasks","time":{"start":1694356273963,"stop":1694356274637,"duration":674},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"afterStages":[{"name":"login_tasks::0","time":{"start":1694356275870,"stop":1694356275894,"duration":24},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"database::0","time":{"start":1694356275926,"stop":1694356275927,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"labels":[{"name":"parentSuite","value":"tests.5 test_tasks"},{"name":"suite","value":"test_tasks"},{"name":"host","value":"WIN-V4MLJNPG1BI"},{"name":"thread","value":"17680-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.5 test_tasks.test_tasks"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"stage_id","value":"10"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"ec65963354e5bdb9","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694356119249,"stop":1694356119257,"duration":8}},{"uid":"408e3a251aa192b6","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694356078965,"stop":1694356078972,"duration":7}},{"uid":"5e3e46aca5a534bb","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694355943104,"stop":1694355943111,"duration":7}},{"uid":"ce348f59db62d116","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694355854224,"stop":1694355854231,"duration":7}},{"uid":"fc994a5a3b688c10","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694355780536,"stop":1694355780545,"duration":9}},{"uid":"6d2a9a7b5276fe16","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694355590564,"stop":1694355590572,"duration":8}},{"uid":"55552cc05ee53f6c","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694355560468,"stop":1694355560475,"duration":7}},{"uid":"5ea078d5edb38647","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694355508589,"stop":1694355508596,"duration":7}},{"uid":"39fbdba7028523ca","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694355486981,"stop":1694355486987,"duration":6}},{"uid":"a73b8012e2f40050","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694355438361,"stop":1694355438370,"duration":9}},{"uid":"2f5440e190094e52","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694355401459,"stop":1694355401466,"duration":7}},{"uid":"ec5f6961bf7b7544","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694355393729,"stop":1694355393736,"duration":7}},{"uid":"2ab1bfa01a002e72","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694355309011,"stop":1694355309017,"duration":6}},{"uid":"6d41f7a8ce107f43","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694355295230,"stop":1694355295238,"duration":8}},{"uid":"58b1ea1e04d0df30","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694348202559,"stop":1694348202567,"duration":8}},{"uid":"47e3e7ca010a953e","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694348168724,"stop":1694348168731,"duration":7}},{"uid":"a2ad6a37d3df9d4a","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694348108531,"stop":1694348108540,"duration":9}},{"uid":"b56f95240499190c","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694348077941,"stop":1694348077948,"duration":7}},{"uid":"df5b023fe528f7e1","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694348052658,"stop":1694348052666,"duration":8}},{"uid":"c25343062049c7d4","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1694348035827,"stop":1694348035833,"duration":6}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"a7c0195f4c58ea8e.json","parameterValues":["10"]}
