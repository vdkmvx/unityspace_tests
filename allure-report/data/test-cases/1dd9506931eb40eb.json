{"uid":"1dd9506931eb40eb","name":"POST /tasks","fullName":"tests.5 test_tasks.test_tasks#test_6_create_task","historyId":"d4ef952c93170545b958361dd2ba9adb","time":{"start":1694355487268,"stop":1694355487319,"duration":51},"status":"failed","statusMessage":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","statusTrace":"login_tasks = <requests.sessions.Session object at 0x000002802BAA8D10>, order = 122222222222222222...2222222222222222222\n\n    @allure.title(\"POST /tasks\")\n    @pytest.mark.parametrize('order', invalid_orders)\n    def test_6_create_task(login_tasks, order):\n        project = login_tasks.get(HOST + '/projects/all-projects').json()[0]\n        project_stage_id = project[\"stages\"][0][\"id\"]\n        print(\"stageid: \", project_stage_id)\n        response = login_tasks.post(HOST + '/tasks', json={\n            \"name\": \"Задача\",\n            \"stageId\": project_stage_id,\n            \"order\": order,\n            \"responsibleUserId\": None,\n            \"description\": \"string\",\n            \"color\": \"string\",\n            \"dateBegin\": time_now(),\n            \"dateEnd\": time_now()\n        })\n>       assert response.status_code == 400\nE       assert 500 == 400\nE        +  where 500 = <Response [500]>.status_code\n\ntests\\5 test_tasks\\test_tasks.py:100: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"database","time":{"start":1694355486106,"stop":1694355486114,"duration":8},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"login_tasks","time":{"start":1694355486114,"stop":1694355486756,"duration":642},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","statusTrace":"login_tasks = <requests.sessions.Session object at 0x000002802BAA8D10>, order = 122222222222222222...2222222222222222222\n\n    @allure.title(\"POST /tasks\")\n    @pytest.mark.parametrize('order', invalid_orders)\n    def test_6_create_task(login_tasks, order):\n        project = login_tasks.get(HOST + '/projects/all-projects').json()[0]\n        project_stage_id = project[\"stages\"][0][\"id\"]\n        print(\"stageid: \", project_stage_id)\n        response = login_tasks.post(HOST + '/tasks', json={\n            \"name\": \"Задача\",\n            \"stageId\": project_stage_id,\n            \"order\": order,\n            \"responsibleUserId\": None,\n            \"description\": \"string\",\n            \"color\": \"string\",\n            \"dateBegin\": time_now(),\n            \"dateEnd\": time_now()\n        })\n>       assert response.status_code == 400\nE       assert 500 == 400\nE        +  where 500 = <Response [500]>.status_code\n\ntests\\5 test_tasks\\test_tasks.py:100: AssertionError","steps":[],"attachments":[{"uid":"159bf18ae4deacc9","name":"stdout","source":"159bf18ae4deacc9.txt","type":"text/plain","size":15}],"parameters":[],"stepsCount":0,"hasContent":true,"shouldDisplayMessage":true,"attachmentsCount":1},"afterStages":[{"name":"login_tasks::0","time":{"start":1694355487322,"stop":1694355487335,"duration":13},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"database::0","time":{"start":1694355487336,"stop":1694355487336,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"labels":[{"name":"parentSuite","value":"tests.5 test_tasks"},{"name":"suite","value":"test_tasks"},{"name":"host","value":"WIN-V4MLJNPG1BI"},{"name":"thread","value":"12436-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.5 test_tasks.test_tasks"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"order","value":"12222222222222222222222222222222222222222222222222222222222222222222222222222222222"}],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"1dd9506931eb40eb.json","parameterValues":["12222222222222222222222222222222222222222222222222222222222222222222222222222222222"]}
